generating sql_sanitizer.bundle (dev)
installing sql_sanitizer.bundle
cp tmp/arm64-darwin21/sql_sanitizer/3.1.2/sql_sanitizer.bundle tmp/arm64-darwin21/stage/lib/sql_sanitizer/sql_sanitizer.bundle


----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT `table`.* FROM `table` WHERE `id` = 'secret' LIMIT 1;

Rehearsal ------------------------------------------------------------------------------------
select_where_single_quote - obfuscate_sql (ruby)   0.899292   0.004930   0.904222 (  0.904207)
select_where_single_quote - sanitize_sql (rust)    2.510835   0.007480   2.518315 (  2.518310)
--------------------------------------------------------------------------- total: 3.422537sec

                                                       user     system      total        real
select_where_single_quote - obfuscate_sql (ruby)   0.877628   0.002611   0.880239 (  0.880229)
select_where_single_quote - sanitize_sql (rust)    2.518419   0.015055   2.533474 (  2.534369)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT `table`.* FROM `table` WHERE `id` = "secret" LIMIT 1;

Rehearsal ------------------------------------------------------------------------------------
select_where_double_quote - obfuscate_sql (ruby)   0.880153   0.008022   0.888175 (  0.888269)
select_where_double_quote - sanitize_sql (rust)    2.526340   0.011089   2.537429 (  2.538482)
--------------------------------------------------------------------------- total: 3.425604sec

                                                       user     system      total        real
select_where_double_quote - obfuscate_sql (ruby)   0.878814   0.004212   0.883026 (  0.883090)
select_where_double_quote - sanitize_sql (rust)    2.518325   0.007761   2.526086 (  2.526065)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT table.* FROM table WHERE id = 'secret' LIMIT 1;

Rehearsal --------------------------------------------------------------------------------------
select_table_name_no_quotes - obfuscate_sql (ruby)   0.834678   0.003526   0.838204 (  0.838198)
select_table_name_no_quotes - sanitize_sql (rust)    3.059234   0.006651   3.065885 (  3.065877)
----------------------------------------------------------------------------- total: 3.904089sec

                                                         user     system      total        real
select_table_name_no_quotes - obfuscate_sql (ruby)   0.834224   0.002385   0.836609 (  0.836603)
select_table_name_no_quotes - sanitize_sql (rust)    3.052491   0.005616   3.058107 (  3.058074)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT `table`.* FROM `table` WHERE `id` = 1 LIMIT 1;

Rehearsal -------------------------------------------------------------------------------
select_where_numeric - obfuscate_sql (ruby)   0.879616   0.002990   0.882606 (  0.882597)
select_where_numeric - sanitize_sql (rust)    2.455500   0.005035   2.460535 (  2.461470)
---------------------------------------------------------------------- total: 3.343141sec

                                                  user     system      total        real
select_where_numeric - obfuscate_sql (ruby)   0.877833   0.002541   0.880374 (  0.880375)
select_where_numeric - sanitize_sql (rust)    2.457202   0.004113   2.461315 (  2.461311)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT `table`.* FROM `table` WHERE `id` = -1 LIMIT 1;

Rehearsal ----------------------------------------------------------------------------------------
select_where_numeric_negative - obfuscate_sql (ruby)   0.877485   0.002941   0.880426 (  0.880417)
select_where_numeric_negative - sanitize_sql (rust)    2.469875   0.003785   2.473660 (  2.473635)
------------------------------------------------------------------------------- total: 3.354086sec

                                                           user     system      total        real
select_where_numeric_negative - obfuscate_sql (ruby)   0.875175   0.002492   0.877667 (  0.877661)
select_where_numeric_negative - sanitize_sql (rust)    2.473132   0.007057   2.480189 (  2.480213)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT `table`.* FROM `table` WHERE `name` = UPPERCASE('lower') LIMIT 1;

Rehearsal -------------------------------------------------------------------------------------
select_where_with_function - obfuscate_sql (ruby)   1.002852   0.004634   1.007486 (  1.007476)
select_where_with_function - sanitize_sql (rust)    2.940659   0.012301   2.952960 (  2.953053)
---------------------------------------------------------------------------- total: 3.960446sec

                                                        user     system      total        real
select_where_with_function - obfuscate_sql (ruby)   1.014341   0.009335   1.023676 (  1.024308)
select_where_with_function - sanitize_sql (rust)    2.934770   0.027416   2.962186 (  2.962349)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT `table`.* FROM `table` WHERE `name` = COMMAND('table', 'lower') LIMIT 1;

Rehearsal ---------------------------------------------------------------------------------------------------
select_where_with_function_multiple_args - obfuscate_sql (ruby)   1.079153   0.010811   1.089964 (  1.090019)
select_where_with_function_multiple_args - sanitize_sql (rust)    3.091912   0.026996   3.118908 (  3.119485)
------------------------------------------------------------------------------------------ total: 4.208872sec

                                                                      user     system      total        real
select_where_with_function_multiple_args - obfuscate_sql (ruby)   1.079594   0.005229   1.084823 (  1.084895)
select_where_with_function_multiple_args - sanitize_sql (rust)    3.097771   0.019988   3.117759 (  3.119062)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT `table`.* FROM `table` WHERE `name` = COMMAND(`table`, 'lower') LIMIT 1;

Rehearsal ------------------------------------------------------------------------------------------------
select_where_with_function_mixed_args - obfuscate_sql (ruby)   1.100280   0.008318   1.108598 (  1.110078)
select_where_with_function_mixed_args - sanitize_sql (rust)    3.144962   0.023767   3.168729 (  3.171467)
--------------------------------------------------------------------------------------- total: 4.277327sec

                                                                   user     system      total        real
select_where_with_function_mixed_args - obfuscate_sql (ruby)   1.075936   0.008776   1.084712 (  1.084741)
select_where_with_function_mixed_args - sanitize_sql (rust)    3.121446   0.016021   3.137467 (  3.137580)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT `table`.* FROM `table` WHERE `name` = LOWERCASE(UPPERCASE('lower')) LIMIT 1;

Rehearsal --------------------------------------------------------------------------------------------
select_where_with_nested_function - obfuscate_sql (ruby)   1.125289   0.009486   1.134775 (  1.135849)
select_where_with_nested_function - sanitize_sql (rust)    3.326662   0.026068   3.352730 (  3.356729)
----------------------------------------------------------------------------------- total: 4.487505sec

                                                               user     system      total        real
select_where_with_nested_function - obfuscate_sql (ruby)   1.117793   0.009481   1.127274 (  1.127356)
select_where_with_nested_function - sanitize_sql (rust)    3.307182   0.024278   3.331460 (  3.333158)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT `table`.* FROM `table` WHERE `id` LIKE 'value'

Rehearsal ----------------------------------------------------------------------------
select_where_like - obfuscate_sql (ruby)   1.150780   0.005666   1.156446 (  1.156467)
select_where_like - sanitize_sql (rust)    2.256053   0.007089   2.263142 (  2.263850)
------------------------------------------------------------------- total: 3.419588sec

                                               user     system      total        real
select_where_like - obfuscate_sql (ruby)   1.149153   0.004810   1.153963 (  1.153992)
select_where_like - sanitize_sql (rust)    2.251198   0.007421   2.258619 (  2.258622)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT `table`.* FROM `table` LIMIT 10 OFFSET 5;

Rehearsal ----------------------------------------------------------------------------------
select_limit_and_offset - obfuscate_sql (ruby)   0.830902   0.004436   0.835338 (  0.835437)
select_limit_and_offset - sanitize_sql (rust)    2.365592   0.008696   2.374288 (  2.374267)
------------------------------------------------------------------------- total: 3.209626sec

                                                     user     system      total        real
select_limit_and_offset - obfuscate_sql (ruby)   0.830916   0.003882   0.834798 (  0.834809)
select_limit_and_offset - sanitize_sql (rust)    2.364699   0.008181   2.372880 (  2.372857)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT "table".* FROM "table" WHERE "field1" = 1 AND "field2" = 'something';

Rehearsal ----------------------------------------------------------------------------
select_and_quoted - obfuscate_sql (ruby)   0.979168   0.007812   0.986980 (  0.987175)
select_and_quoted - sanitize_sql (rust)    2.854398   0.010975   2.865373 (  2.868790)
------------------------------------------------------------------- total: 3.852353sec

                                               user     system      total        real
select_and_quoted - obfuscate_sql (ruby)   0.986035   0.006129   0.992164 (  0.992354)
select_and_quoted - sanitize_sql (rust)    2.833561   0.010497   2.844058 (  2.845173)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT `table`.* FROM `table` WHERE `field` BETWEEN 5 AND 10;

Rehearsal -----------------------------------------------------------------------------
select_between_and - obfuscate_sql (ruby)   0.936978   0.005477   0.942455 (  0.942483)
select_between_and - sanitize_sql (rust)    2.562329   0.012483   2.574812 (  2.574818)
-------------------------------------------------------------------- total: 3.517267sec

                                                user     system      total        real
select_between_and - obfuscate_sql (ruby)   0.943757   0.008710   0.952467 (  0.953670)
select_between_and - sanitize_sql (rust)    2.561985   0.020461   2.582446 (  2.582419)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT `table`.* FROM `table` WHERE `id` = 1 AND (other_field = 1) LIMIT 1;

Rehearsal ---------------------------------------------------------------------------------------------------
select_and_with_scope_and_unquoted_field - obfuscate_sql (ruby)   1.157570   0.011253   1.168823 (  1.169202)
select_and_with_scope_and_unquoted_field - sanitize_sql (rust)    3.288939   0.024825   3.313764 (  3.314602)
------------------------------------------------------------------------------------------ total: 4.482587sec

                                                                      user     system      total        real
select_and_with_scope_and_unquoted_field - obfuscate_sql (ruby)   1.154984   0.005193   1.160177 (  1.160186)
select_and_with_scope_and_unquoted_field - sanitize_sql (rust)    3.278892   0.011758   3.290650 (  3.290627)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT COUNT(*) FROM `table` WHERE `field` = 1;

Rehearsal ----------------------------------------------------------------------
count_start - obfuscate_sql (ruby)   1.117975   0.006278   1.124253 (  1.124269)
count_start - sanitize_sql (rust)    2.329139   0.008706   2.337845 (  2.337824)
------------------------------------------------------------- total: 3.462098sec

                                         user     system      total        real
count_start - obfuscate_sql (ruby)   1.116429   0.005457   1.121886 (  1.122093)
count_start - sanitize_sql (rust)    2.335376   0.008052   2.343428 (  2.343428)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT `table`.* FROM `table` WHERE `id` = $1 LIMIT 1;

Rehearsal -------------------------------------------------------------------------------------------
select_where_already_placeholder - obfuscate_sql (ruby)   0.895675   0.005027   0.900702 (  0.900776)
select_where_already_placeholder - sanitize_sql (rust)    2.476085   0.009171   2.485256 (  2.486969)
---------------------------------------------------------------------------------- total: 3.385958sec

                                                              user     system      total        real
select_where_already_placeholder - obfuscate_sql (ruby)   0.915376   0.005274   0.920650 (  0.922018)
select_where_already_placeholder - sanitize_sql (rust)    2.463450   0.008300   2.471750 (  2.471888)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT `posts`.* FROM `posts` WHERE (created_at >= '2016-01-10 13:34:46.647328' OR updated_at >= '2016-01-10 13:34:46.647328')

Rehearsal ----------------------------------------------------------------------------------------
select_where_or_and_operators - obfuscate_sql (ruby)   1.304866   0.006324   1.311190 (  1.311225)
select_where_or_and_operators - sanitize_sql (rust)    3.681168   0.014200   3.695368 (  3.697128)
------------------------------------------------------------------------------- total: 5.006558sec

                                                           user     system      total        real
select_where_or_and_operators - obfuscate_sql (ruby)   1.323253   0.004757   1.328010 (  1.328752)
select_where_or_and_operators - sanitize_sql (rust)    3.668814   0.013070   3.681884 (  3.682673)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT `posts`.* FROM `posts` WHERE ('2016-01-10' >= created_at AND '2016-01-10' <= updated_at OR '2021-10-22' = published_at)

Rehearsal -----------------------------------------------------------------------------------------------
select_reversed_comparison_operators - obfuscate_sql (ruby)   1.489706   0.006872   1.496578 (  1.496604)
select_reversed_comparison_operators - sanitize_sql (rust)    4.132005   0.015998   4.148003 (  4.147983)
-------------------------------------------------------------------------------------- total: 5.644581sec

                                                                  user     system      total        real
select_reversed_comparison_operators - obfuscate_sql (ruby)   1.488454   0.006322   1.494776 (  1.494812)
select_reversed_comparison_operators - sanitize_sql (rust)    4.140433   0.014776   4.155209 (  4.155188)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT * FROM `posts` WHERE `field` = x'42'

Rehearsal ----------------------------------------------------------------------------
bitfield_modifier - obfuscate_sql (ruby)   0.982084   0.005057   0.987141 (  0.987169)
bitfield_modifier - sanitize_sql (rust)    1.969710   0.006881   1.976591 (  1.977099)
------------------------------------------------------------------- total: 2.963732sec

                                               user     system      total        real
bitfield_modifier - obfuscate_sql (ruby)   0.980640   0.004169   0.984809 (  0.984819)
bitfield_modifier - sanitize_sql (rust)    1.961163   0.006486   1.967649 (  1.967640)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT * FROM `posts` WHERE `field` = DATE 'str' AND `field2` = DATE'str'

Rehearsal ------------------------------------------------------------------------
date_modifier - obfuscate_sql (ruby)   1.103734   0.004958   1.108692 (  1.108874)
date_modifier - sanitize_sql (rust)    3.231297   0.011034   3.242331 (  3.242415)
--------------------------------------------------------------- total: 4.351023sec

                                           user     system      total        real
date_modifier - obfuscate_sql (ruby)   1.120875   0.004471   1.125346 (  1.125397)
date_modifier - sanitize_sql (rust)    3.231860   0.011785   3.243645 (  3.243643)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT * FROM `posts` WHERE `field` = BINARY '123' and `field2` = BINARY'456' AND `field3` = BINARY 789

Rehearsal --------------------------------------------------------------------------
binary_modifier - obfuscate_sql (ruby)   1.466785   0.007152   1.473937 (  1.473960)
binary_modifier - sanitize_sql (rust)    4.402951   0.016475   4.419426 (  4.420365)
----------------------------------------------------------------- total: 5.893363sec

                                             user     system      total        real
binary_modifier - obfuscate_sql (ruby)   1.465164   0.006261   1.471425 (  1.471439)
binary_modifier - sanitize_sql (rust)    4.385650   0.015824   4.401474 (  4.401448)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT * FROM `posts` WHERE `field` = n'str' AND `field2` = _utf8'str'

Rehearsal --------------------------------------------------------------------------
string_modifier - obfuscate_sql (ruby)   1.103096   0.004962   1.108058 (  1.108167)
string_modifier - sanitize_sql (rust)    2.833084   0.009374   2.842458 (  2.842428)
----------------------------------------------------------------- total: 3.950516sec

                                             user     system      total        real
string_modifier - obfuscate_sql (ruby)   1.089235   0.004700   1.093935 (  1.093950)
string_modifier - sanitize_sql (rust)    2.855294   0.008582   2.863876 (  2.864128)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT `table`.* FROM `table` WHERE `id` IN (1, 2, 3) LIMIT 1;

Rehearsal --------------------------------------------------------------------
select_in - obfuscate_sql (ruby)   1.081980   0.005017   1.086997 (  1.087201)
select_in - sanitize_sql (rust)    2.904769   0.008583   2.913352 (  2.913324)
----------------------------------------------------------- total: 4.000349sec

                                       user     system      total        real
select_in - obfuscate_sql (ruby)   1.083152   0.004786   1.087938 (  1.087945)
select_in - sanitize_sql (rust)    2.939467   0.012997   2.952464 (  2.955921)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT `table`.* FROM `table` WHERE `id` IN (SELECT `id` FROM `something` WHERE `a` = 1) LIMIT 1;

Rehearsal -----------------------------------------------------------------------------
select_in_subquery - obfuscate_sql (ruby)   1.345557   0.013487   1.359044 (  1.359125)
select_in_subquery - sanitize_sql (rust)    3.959453   0.034638   3.994091 (  3.995461)
-------------------------------------------------------------------- total: 5.353135sec

                                                user     system      total        real
select_in_subquery - obfuscate_sql (ruby)   1.347027   0.013637   1.360664 (  1.360687)
select_in_subquery - sanitize_sql (rust)    3.946357   0.017075   3.963432 (  3.964389)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT * FROM "table" WHERE "field" = ARRAY['item_1','item_2','item_3'];

Rehearsal -----------------------------------------------------------------------
select_array - obfuscate_sql (ruby)   0.875043   0.005123   0.880166 (  0.880411)
select_array - sanitize_sql (rust)    2.645887   0.008625   2.654512 (  2.655209)
-------------------------------------------------------------- total: 3.534678sec

                                          user     system      total        real
select_array - obfuscate_sql (ruby)   0.880929   0.004314   0.885243 (  0.885350)
select_array - sanitize_sql (rust)    2.651538   0.018415   2.669953 (  2.670728)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT * FROM `tables` INNER JOIN `other` ON `table`.`id` = `other`.`table_id` WHERE `other`.`field` = 1);

Rehearsal ---------------------------------------------------------------------------------------
select_join_backquote_tables - obfuscate_sql (ruby)   2.285838   0.022108   2.307946 (  2.308051)
select_join_backquote_tables - sanitize_sql (rust)    3.976903   0.031731   4.008634 (  4.011896)
------------------------------------------------------------------------------ total: 6.316580sec

                                                          user     system      total        real
select_join_backquote_tables - obfuscate_sql (ruby)   2.285948   0.008936   2.294884 (  2.295850)
select_join_backquote_tables - sanitize_sql (rust)    3.942049   0.017830   3.959879 (  3.960624)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT * FROM "tables" INNER JOIN "other" ON "table"."id" = "other"."table_id" WHERE "other"."field" = 1);

Rehearsal -----------------------------------------------------------------------------------------
select_join_doublequote_tables - obfuscate_sql (ruby)   1.333328   0.009512   1.342840 (  1.344307)
select_join_doublequote_tables - sanitize_sql (rust)    3.942934   0.032292   3.975226 (  3.976523)
-------------------------------------------------------------------------------- total: 5.318066sec

                                                            user     system      total        real
select_join_doublequote_tables - obfuscate_sql (ruby)   1.316930   0.013670   1.330600 (  1.330749)
select_join_doublequote_tables - sanitize_sql (rust)    3.938805   0.025270   3.964075 (  3.966163)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
        SELECT a.attname, format_type(a.atttypid, a.atttypmod),
      pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod
      FROM pg_attribute a LEFT JOIN pg_attrdef d
      ON a.attrelid = d.adrelid AND a.attnum = d.adnum
      WHERE a.attrelid = '"value"'::regclass
      AND a.attnum > 0 AND NOT a.attisdropped
      ORDER BY a.attnum;


Rehearsal ---------------------------------------------------------------------------------------------------
select_with_functions_regex_and_newlines - obfuscate_sql (ruby)   4.128668   0.012529   4.141197 (  4.142198)
select_with_functions_regex_and_newlines - sanitize_sql (rust)   16.663202   0.058684  16.721886 ( 16.722998)
----------------------------------------------------------------------------------------- total: 20.863083sec

                                                                      user     system      total        real
select_with_functions_regex_and_newlines - obfuscate_sql (ruby)   4.157926   0.013526   4.171452 (  4.172281)
select_with_functions_regex_and_newlines - sanitize_sql (rust)   16.706755   0.058657  16.765412 ( 16.768238)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  UPDATE `table` SET `field` = "value", `field2` = 1 WHERE id = 1;

Rehearsal ----------------------------------------------------------------------------------
update_backquote_tables - obfuscate_sql (ruby)   1.039335   0.005731   1.045066 (  1.045082)
update_backquote_tables - sanitize_sql (rust)    2.906961   0.009261   2.916222 (  2.916894)
------------------------------------------------------------------------- total: 3.961288sec

                                                     user     system      total        real
update_backquote_tables - obfuscate_sql (ruby)   1.055901   0.004906   1.060807 (  1.061271)
update_backquote_tables - sanitize_sql (rust)    2.892269   0.011992   2.904261 (  2.904252)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  UPDATE "table" SET "field1" = 'value', "field2" = 1 WHERE id = 1;

Rehearsal -------------------------------------------------------------------------------------
update_double_quote_tables - obfuscate_sql (ruby)   1.058943   0.005402   1.064345 (  1.064644)
update_double_quote_tables - sanitize_sql (rust)    2.898555   0.009104   2.907659 (  2.907638)
---------------------------------------------------------------------------- total: 3.972004sec

                                                        user     system      total        real
update_double_quote_tables - obfuscate_sql (ruby)   1.047348   0.005010   1.052358 (  1.052843)
update_double_quote_tables - sanitize_sql (rust)    2.907963   0.008727   2.916690 (  2.916660)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  INSERT INTO `table` (`field1`, `field2`) VALUES ('value', 1, -1.0, 'value');

Rehearsal ----------------------------------------------------------------------------------
insert_backquote_tables - obfuscate_sql (ruby)   1.028696   0.004917   1.033613 (  1.033663)
insert_backquote_tables - sanitize_sql (rust)    2.889055   0.010452   2.899507 (  2.900240)
------------------------------------------------------------------------- total: 3.933120sec

                                                     user     system      total        real
insert_backquote_tables - obfuscate_sql (ruby)   1.010919   0.004549   1.015468 (  1.015467)
insert_backquote_tables - sanitize_sql (rust)    2.889173   0.009779   2.898952 (  2.899782)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  INSERT INTO "table" ("field1", "field2") VALUES ('value', 1, -1.0, 'value');

Rehearsal ------------------------------------------------------------------------------------
insert_doublequote_tables - obfuscate_sql (ruby)   1.007902   0.005466   1.013368 (  1.013563)
insert_doublequote_tables - sanitize_sql (rust)    2.881336   0.009273   2.890609 (  2.891316)
--------------------------------------------------------------------------- total: 3.903977sec

                                                       user     system      total        real
insert_doublequote_tables - obfuscate_sql (ruby)   1.021711   0.005448   1.027159 (  1.027211)
insert_doublequote_tables - sanitize_sql (rust)    2.874719   0.009772   2.884491 (  2.884473)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  INSERT INTO `table` (`field1`, `field2`) VALUES ('value', 1, -1.0, 'value'),('value', 1, -1.0, 'value'),('value', 1, -1.0, 'value');

Rehearsal ---------------------------------------------------------------------------------
insert_multiple_values - obfuscate_sql (ruby)   1.730194   0.006856   1.737050 (  1.737202)
insert_multiple_values - sanitize_sql (rust)    4.356480   0.015836   4.372316 (  4.372286)
------------------------------------------------------------------------ total: 6.109366sec

                                                    user     system      total        real
insert_multiple_values - obfuscate_sql (ruby)   1.759132   0.008002   1.767134 (  1.767225)
insert_multiple_values - sanitize_sql (rust)    4.353807   0.015159   4.368966 (  4.369153)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  INSERT INTO `table` (`field1`, `field2`) VALUES ('value', 1, -1.0, 'value'), ('value', 1, -1.0, 'value'), ('value', 1, -1.0, 'value');

Rehearsal ---------------------------------------------------------------------------------------------
insert_multiple_values_with_spaces - obfuscate_sql (ruby)   1.776331   0.008889   1.785220 (  1.785259)
insert_multiple_values_with_spaces - sanitize_sql (rust)    4.414641   0.018301   4.432942 (  4.433605)
------------------------------------------------------------------------------------ total: 6.218162sec

                                                                user     system      total        real
insert_multiple_values_with_spaces - obfuscate_sql (ruby)   1.760155   0.008325   1.768480 (  1.770620)
insert_multiple_values_with_spaces - sanitize_sql (rust)    4.416059   0.015551   4.431610 (  4.432493)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  INSERT INTO "table" ("field1", "field2") VALUES ('value', 1) RETURNING "id";

Rehearsal ---------------------------------------------------------------------------
insert_returning - obfuscate_sql (ruby)   1.086279   0.005489   1.091768 (  1.091851)
insert_returning - sanitize_sql (rust)    3.015897   0.010955   3.026852 (  3.027254)
------------------------------------------------------------------ total: 4.118620sec

                                              user     system      total        real
insert_returning - obfuscate_sql (ruby)   1.084310   0.005147   1.089457 (  1.089478)
insert_returning - sanitize_sql (rust)    3.007400   0.010178   3.017578 (  3.017575)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  INSERT INTO "table" ("field1", "field2") VALUES (NULL, 1);

Rehearsal ----------------------------------------------------------------------
insert_null - obfuscate_sql (ruby)   0.843533   0.004716   0.848249 (  0.848270)
insert_null - sanitize_sql (rust)    2.771269   0.012140   2.783409 (  2.784612)
------------------------------------------------------------- total: 3.631658sec

                                         user     system      total        real
insert_null - obfuscate_sql (ruby)   0.827265   0.004477   0.831742 (  0.831743)
insert_null - sanitize_sql (rust)    2.766811   0.008284   2.775095 (  2.775091)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT * FROM table # This is a comment

Rehearsal ------------------------------------------------------------------------
comment_pound - obfuscate_sql (ruby)   0.771997   0.003396   0.775393 (  0.775393)
comment_pound - sanitize_sql (rust)    1.805503   0.007071   1.812574 (  1.813684)
--------------------------------------------------------------- total: 2.587967sec

                                           user     system      total        real
comment_pound - obfuscate_sql (ruby)   0.771431   0.003833   0.775264 (  0.775254)
comment_pound - sanitize_sql (rust)    1.795345   0.006105   1.801450 (  1.801818)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT * FROM table -- This is a comment
 SELECT

Rehearsal ------------------------------------------------------------------------------
comment_double_dash - obfuscate_sql (ruby)   0.852080   0.004896   0.856976 (  0.857401)
comment_double_dash - sanitize_sql (rust)    2.076174   0.007204   2.083378 (  2.083367)
--------------------------------------------------------------------- total: 2.940354sec

                                                 user     system      total        real
comment_double_dash - obfuscate_sql (ruby)   0.843715   0.003793   0.847508 (  0.847545)
comment_double_dash - sanitize_sql (rust)    2.067917   0.006864   2.074781 (  2.074770)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT * FROM table /* This is a comment */ SELECT

Rehearsal -----------------------------------------------------------------------------
comment_multi_line - obfuscate_sql (ruby)   0.783551   0.004128   0.787679 (  0.787702)
comment_multi_line - sanitize_sql (rust)    2.164142   0.007571   2.171713 (  2.171690)
-------------------------------------------------------------------- total: 2.959392sec

                                                user     system      total        real
comment_multi_line - obfuscate_sql (ruby)   0.796562   0.003631   0.800193 (  0.800204)
comment_multi_line - sanitize_sql (rust)    2.177542   0.007442   2.184984 (  2.185595)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT "users".* FROM "users" WHERE "users"."type" IN (?) AND "users"."active" = $1

Rehearsal ----------------------------------------------------------------------------
keep_placeholders - obfuscate_sql (ruby)   1.098244   0.005550   1.103794 (  1.103891)
keep_placeholders - sanitize_sql (rust)    3.172778   0.011270   3.184048 (  3.184020)
------------------------------------------------------------------- total: 4.287842sec

                                               user     system      total        real
keep_placeholders - obfuscate_sql (ruby)   1.094370   0.005653   1.100023 (  1.100034)
keep_placeholders - sanitize_sql (rust)    3.188572   0.012107   3.200679 (  3.202458)
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
Benchmarking the following query:
  SELECT table.*, NULLIF((table2.json_col #>> '{obj1,obj2}')::float, 0) FROM table

Rehearsal --------------------------------------------------------------------------
json_operations - obfuscate_sql (ruby)   1.295407   0.005242   1.300649 (  1.300640)
json_operations - sanitize_sql (rust)    4.137238   0.019931   4.157169 (  4.157626)
----------------------------------------------------------------- total: 5.457818sec

                                             user     system      total        real
json_operations - obfuscate_sql (ruby)   1.317566   0.005485   1.323051 (  1.323057)
json_operations - sanitize_sql (rust)    4.138285   0.014136   4.152421 (  4.152416)
----------------------------------------------------------------------------------------------------

